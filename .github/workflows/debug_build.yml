name: Build

on:
  push:
    paths-ignore:
      - '*.md'
      - '*.yml'
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4

    steps:
    - name: Clone repository
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.1'
 
    - name: Install Python requirements
      run: |
        pip install pip setuptools wheel -U
        pip install pyrogram tgcrypto -U

    - name: Build
      run: |
        ./gradlew assembleDebug

    - name: Save some env vars
      run: |
        git clone https://github.com/termux/termux-app termux-app
        cd termux-app
        echo "SHORT_REV=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "LONG_REV=$(git rev-parse HEAD)" >> $GITHUB_ENV
        echo "BRANCH=$(sed 's/-/_/g' <<< `git rev-parse --abbrev-ref HEAD`)" >> $GITHUB_ENV
        echo "TIME=$(sed 's/-/_/g' <<< `git log -1 --format=%cd`)" >> $GITHUB_ENV
        echo "MD5=$(echo -n "./app/build/outputs/apk/debug/app-debug.apk" | md5sum)" >> $GITHUB_ENV
        echo "SHA256=$(echo -n "./app/build/outputs/apk/debug/app-debug.apk" | sha256sum)" >> $GITHUB_ENV

    - name: Send a sticker separator before the APK
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
      run: |
        python .github/workflows/send_sticker.py

    - name: Upload the APK to Telegram
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
      run: |
        python .github/workflows/upload.py
